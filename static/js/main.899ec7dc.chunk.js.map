{"version":3,"sources":["components/wrapper/wrapper.js","components/nav/nav.js","components/header/header.js","components/scoreboard/scoreboard.js","components/imgCard/imgCard.js","components/gameover/gameover.js","App.js","index.js"],"names":["Wrapper","props","className","children","Nav","href","Header","Scoreboard","msg","score","highScore","ImgCard","id","name","onClick","handleClick","alt","src","img_url","GameOver","gameover","countdown","randomChars","array","i","length","j","Math","floor","random","App","state","chars","selected","shuffleChars","shuffled","setState","indexOf","increment","reset","setTimeout","newScore","this","map","char","key","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.899ec7dc.chunk.js","sourcesContent":["import React from 'react';\n\nconst Wrapper = props => <div className=\"container-fluid\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./nav.css\";\n\nconst Nav = () => (\n  <nav className=\"navbar mb-1 navigation\">\n    <div className=\"navbar-header\">\n      <a className=\"navbar-brand\" href=\"\">\n        Click - Out!!\n      </a>{\" \"}\n    </div>{\" \"}\n    <ul className=\"nav navbar-nav\">\n      <a href=\"https://github.com/rubinholima\"> GitHub Repo </a>{\" \"}\n    </ul>{\" \"}\n  </nav>\n);\n\nexport default Nav;\n","import React from \"react\";\nimport \"./header.css\";\n\nconst Header = () => (\n  <div className=\"container\">\n    <div className=\"jumbotron bg text-center\">\n      <h1 className=\"logo\">Arcade Time!</h1>\n      <p className=\"desc\">\n        Click on a character to earn points, if you click the same character\n        twice you lose!\n      </p>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from 'react';\nimport './scoreboard.css';\n\nconst Scoreboard = props => (\n  <div className=\"container text-center mb-3\">\n    <div className=\"row\">\n      <div className=\"col-sm-6\">\n        <div className=\"row\">\n          <div className=\"glove1 col-sm-1 mr-auto\"></div>\n          <p className=\"scoreboard col-sm-10\">{props.msg}</p>\n          <div className=\"glove2 col-sm-1 ml-auto\"></div>\n        </div>\n      </div>\n      <div className=\"col-sm-6\">\n        <p className=\"scoreboard\">Score: {props.score} | High Score: {props.highScore}</p>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Scoreboard;","import React from 'react';\nimport './imgCard.css';\n\nconst ImgCard = props => (\n  <div\n      id={props.name}\n      onClick={() => props.handleClick(props.name)}\n    >\n      <img className=\"img-thumbnail\" alt={props.name} src={props.img_url} />\n  </div>\n);\n\nexport default ImgCard;","import React from 'react';\nimport './gameover.css';\n\nconst GameOver = (props) => {\n  if (props.score >= 12) {\n    return(\n      <div className=\"winner text-center container-fluid\">  \n        <button className=\"new-game btn\" onClick={() => props.handleClick(props.gameover)}>new game</button>\n      </div>\n    )\n  } else {\n    return(\n      <div className=\"container text-center\">\n        <h1 className=\"gameover\">{props.countdown}</h1>\n      </div>\n    )\n  }\n}\n;\n\nexport default GameOver;\n","import React, { Component } from 'react';\nimport chars from './chars.json';\nimport Wrapper from './components/wrapper/wrapper';\nimport Nav from './components/nav/nav';\nimport Header from './components/header/header';\nimport Scoreboard from './components/scoreboard/scoreboard';\nimport ImgCard from './components/imgCard/imgCard';\nimport GameOver from './components/gameover/gameover';\n\n\nfunction randomChars(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  state = {\n    msg: 'Click any character to begin',\n    score: 0,\n    highScore: 0,\n    chars: chars,\n    selected: [],\n    gameover: false,\n    countdown: '',\n  }\n\n  shuffleChars = () => {\n    let shuffled = randomChars(chars);\n    this.setState({chars: shuffled});\n  }\n\n  handleClick = (name) => {\n    if (!this.state.gameover) {\n      if (this.state.selected.indexOf(name) === -1) {\n        this.increment();\n        this.setState({ selected: [...this.state.selected, name] });\n      } else {\n        this.setState({ msg: 'GAME OVER', gameover: true })\n        this.reset();\n        setTimeout(() => {\n          this.setState({ countdown: 3 });\n        }, 1000)\n        setTimeout(() => {\n          this.setState({ countdown: 2 });\n        }, 2000)\n        setTimeout(() => {\n          this.setState({ countdown: 1 });\n        }, 3000)\n      }\n    } else {\n      this.setState({ \n        msg: 'Click any character to begin', \n        selected: [],\n        score: 0,\n        gameover: false\n      });\n    }\n  }\n\n  increment = () => {\n    const newScore = this.state.score + 1;\n    this.setState({\n      score: newScore,\n      msg: 'You guessed correctly!'\n    });\n    if (newScore >= this.state.highScore) {\n      this.setState({ highScore: newScore });\n    }\n    if (newScore === 12) {\n      this.setState({ \n        msg: 'You win!', \n        selected: [],\n        gameover: true\n      });\n    }\n    this.shuffleChars();\n  };\n\n  reset = () => {\n    setTimeout(() => {  \n    this.setState({\n      msg: 'Click any character to begin',\n      score: 0,\n      highScore: this.state.highScore,\n      selected: [],\n      gameover: false,\n      countdown: 3\n    });\n    this.shuffleChars()\n    }, 4000);\n  }\n\n  render() {\n    if (!this.state.gameover) {\n    return (\n      <Wrapper>\n        <Nav />\n        <Header />\n        <Scoreboard \n          msg={this.state.msg}\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n        <div className=\"container\">  \n        { \n          this.state.chars.map(char => (\n            <ImgCard \n              key={char.name}\n              name={char.name}\n              img_url={char.img_url}\n              shuffleChars={this.shuffleChars}\n              handleClick={this.handleClick}\n              increment={this.increment}\n              reset={this.reset}\n            />\n          ))\n        }\n        </div>\n      </Wrapper>\n    )\n  } else {\n    return (\n    <Wrapper>\n      <Nav />\n      <Header />\n        <Scoreboard \n          msg={this.state.msg}\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n      <div className=\"container\">  \n        <GameOver \n          msg={this.props.msg}\n          score={this.state.score}\n          gameover={this.state.gameover}\n          countdown={this.state.countdown}\n          handleClick={this.handleClick}\n          reset={this.reset}\n        />\n      </div>\n    </Wrapper>\n    )\n  }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}